import collections
import sys

dataset="medline"
print(sys.argv[1])
file = open(sys.argv[1], "r")

out= open(sys.argv[2], "w")
#ground= open("/home/guilherme/Downloads/l2knng/build/data/" + dataset+"Ground.csr", "w")
lineNumber=0
colunaNumber=0
elementsNumber=0
memoria="0"
set_data=[]


#0 qid:1 1:0.174545 2:0.083333 3:0.062500 4:0.000000 5:0.176044 6:0.000000 7:0.000000 8:0.000000 9:0.000000 10:0.000000 11:0.178009 12:0.083333 13:0.060569 14:0.000000 15:0.179183 16:0.084787 17:0.095238 1
#8:0.054054 19:0.250000 20:0.085190 21:1.000000 22:0.282700 23:0.374494 24:0.000000 25:1.000000 26:0.987850 27:0.341306 28:0.183738 29:0.000000 30:0.984973 31:0.873810 32:0.009026 33:0.006893 34:0.000000 3
#5:0.859789 36:1.000000 37:0.108855 38:0.112037 39:0.000000 40:1.000000 41:1.000000 42:1.000000 43:0.883207 44:0.960067 45:0.037611 46:1.000000 47:1.000000 48:0.417875 49:0.033155 50:0.000000 51:0.000050 5
#2:0.369140 53:0.000000 54:0.023064 55:0.000000 56:0.002740 57:0.008475 58:0.428571 59:0.209790 60:0.000000 61:0.000000 62:0.000000 63:0.000000 64:0.000000 #docid = G29-66-2836593
#0 qid:1 1:0.423636 2:0.083333 3:0.062500 4:0.000000 5:0.424682 6:0.000000 7:0.000000 8:0.000000 9:0.000000 10:0.000000 11:0.444673 12:0.083333 13:0.060569 14:0.000000 15:0.445409 16:0.334857 17:0.079365 1
#8:0.040541 19:0.250000 20:0.334887 21:0.975814 22:0.315880 23:0.432623 24:0.000000 25:0.977467 26:1.000000 27:0.354233 28:0.206958 29:0.000000 30:1.000000 31:1.000000 32:0.009458 33:0.007301 34:0.000000 3
#5:1.000000 36:0.943902 37:0.122053 38:0.131478 39:0.000000 40:0.943238 41:0.977533 42:0.977533 43:0.874130 44:0.950000 45:0.037210 46:0.984342 47:0.977841 48:0.371321 49:0.033155 50:0.000000 51:0.000050 5
#2:0.369140 53:0.000000 54:0.023064 55:0.000000 56:0.002740 57:0.016949 58:0.428571 59:0.209790 60:0.000000 61:0.000000 62:0.000000 63:0.000000 64:0.000000 #docid = G29-51-4004698
#0 qid:1 1:0.083636 2:0.000000 3:0.000000 4:0.000000 5:0.081670 6:0.000000 7:0.000000 8:0.000000 9:0.000000 10:0.000000 11:0.088707 12:0.000000 13:0.000000 14:0.000000 15:0.086579 16:0.113422 17:0.095238 1
#8:0.175676 19:0.250000 20:0.114643 21:0.926501 22:0.000000 23:0.000000 24:0.000000 25:0.905922 26:0.950824 27:0.000000 28:0.000000 29:0.000000 30:0.944638 31:0.819497 32:0.000000 33:0.000000 34:0.000000 3
#5:0.796296 36:0.907855 37:0.000000 38:0.000000 39:0.000000 40:0.899390 41:0.906079 42:0.906079 43:0.000000 44:0.000000 45:0.000000 46:0.000000 47:0.000000 48:0.000000 49:0.000000 50:0.000000 51:0.000227 5
#2:0.524424 53:0.000000 54:0.000000 55:0.000000 56:0.005479 57:0.025424 58:0.285714 59:0.139860 60:0.000000 61:0.000000 62:0.000000 63:0.000000 64:0.000000 #docid = G31-04-2304760


#0.174545, 0.083333, 0.062500, 0.000000, 0.176044, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.178009, 0.083333, 0.060569, 0.000000, 0.179183, 0.084787, 0.095238, 0.054054, 0.250000, 0.085190, 1.00
#0000, 0.282700, 0.374494, 0.000000, 1.000000, 0.987850, 0.341306, 0.183738, 0.000000, 0.984973, 0.873810, 0.009026, 0.006893, 0.000000, 0.859789, 1.000000, 0.108855, 0.112037, 0.000000, 1.000000, 1.000000
#, 1.000000, 0.883207, 0.960067, 0.037611, 1.000000, 1.000000, 0.417875, 0.033155, 0.000000, 0.000050, 0.369140, 0.000000, 0.023064, 0.000000, 0.002740, 0.008475, 0.428571, 0.209790, 0.000000, 0.000000, 0.
#000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.0000
#00, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
#0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.00
#0000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0
#0.423636, 0.083333, 0.062500, 0.000000, 0.424682, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.444673, 0.083333, 0.060569, 0.000000, 0.445409, 0.334857, 0.079365, 0.040541, 0.250000, 0.334887, 0.97
#5814, 0.315880, 0.432623, 0.000000, 0.977467, 1.000000, 0.354233, 0.206958, 0.000000, 1.000000, 1.000000, 0.009458, 0.007301, 0.000000, 1.000000, 0.943902, 0.122053, 0.131478, 0.000000, 0.943238, 0.977533
#, 0.977533, 0.874130, 0.950000, 0.037210, 0.984342, 0.977841, 0.371321, 0.033155, 0.000000, 0.000050, 0.369140, 0.000000, 0.023064, 0.000000, 0.002740, 0.016949, 0.428571, 0.209790, 0.000000, 0.000000, 0.
#000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.0000
#00, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
#0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.00
#0000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0
#0.083636, 0.000000, 0.000000, 0.000000, 0.081670, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.088707, 0.000000, 0.000000, 0.000000, 0.086579, 0.113422, 0.095238, 0.175676, 0.250000, 0.114643, 0.92
#6501, 0.000000, 0.000000, 0.000000, 0.905922, 0.950824, 0.000000, 0.000000, 0.000000, 0.944638, 0.819497, 0.000000, 0.000000, 0.000000, 0.796296, 0.907855, 0.000000, 0.000000, 0.000000, 0.899390, 0.906079
#, 0.906079, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000227, 0.524424, 0.000000, 0.000000, 0.000000, 0.005479, 0.025424, 0.285714, 0.139860, 0.000000, 0.000000, 0.
#000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.0000
#00, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
#0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.00
#0000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0




map={}
for line in file:
    lineNumber+=1;
    line=line.replace("\n","")

    modulos=line.split(" ")
    #print(modulos)
    #if ":" in modulos[0] and not "qid" in modulos[0]:
        #print("errrooo ", modulos[0] , lineNumber)
        #continue;
    #if modulos[0] in map:
        #list=map[modulos[0]]
        #list.append(lineNumber)
        #map[modulos[0]]=list
    #else:
        #list=[]
        #list.append(lineNumber)
        #map[modulos[0]]=list


    for i in range(1, len(modulos)):
        if(len(modulos[i])==0 or  len(modulos[i])==1 or  "qid" in modulos[i] or  "docid" in modulos[i] or  "G" in modulos[i]):
            continue;
        value=modulos[i].split(":")
       # print(modulos,end=" ")
        #print(value[0], value[1], sep=" ",end=" ")
        if(float(value[1])==0.0):
            continue
        if(int(value[0])>colunaNumber):
            colunaNumber=int(value[0])
        #print (value[0])
       # if value[0] not in set_data and ":" in modulos[i]:
        set_data.append(value[0])
            #print (set_data)
           # if(int(value[1])!=0):
           #     elementsNumber+=1

    #if(lineNumber>10):
#    #    break
#out.write(str(lineNumber) +" "+str(colunaNumber) + " "+ str(len(set_data))+  " \n")
set_data=""
print("segunda parte")
file = open(sys.argv[1], "r")
for line in file:
    lineNumber+=1;
    line=line.replace("\n","")

    modulos=line.split(" ")
    for i in range(1, len(modulos)):
        if(len(modulos[i])==0 or len(modulos[i])==1 or  "qid" in modulos[i] or  "docid" in modulos[i] or "G" in modulos[i]):
            continue;
        value=modulos[i].split(":")

        #if(float(value[1])!=0.0):
        out.write(str(value[1]) +"; ")
            #print(value[1])
    out.write("\n")

#od = collections.OrderedDict(sorted(map.items()))

#for k, v in od.items():
    ##print (k)
    #for w in (v):
        ##print(w)
        #ground.write(str(w) + " 0.00 ")
    #ground.write("\n")

print("lineNumber ",lineNumber)
print("colunaNumber ",colunaNumber)
print("elementsNumber ",len(set_data))
